{"version":3,"sources":["components/pokedex/PokedexHeader.jsx","components/pokedex/Pokemon.jsx","components/pokedex/SinglePokemonTable.jsx","components/pokedex/SinglePokemon.jsx","constants/constants.js","components/pokedex/SelectedTypePokemon.jsx","components/pokedex/PokedexMain.jsx","components/pokedex/Pokedex.jsx","App.js","serviceWorker.js","index.js"],"names":["PokedexHeader","props","react_default","a","createElement","className","Pokemon","Fragment","isLoadingAllPokemons","react_loading_default","type","color","height","width","delay","pokemons","map","pokemon","key","name","onClick","singlePokemon","undefined","url","match","window","innerWidth","href","src","concat","alt","selectedPokemon","setLimit","SinglePokemonTable","_ref","pokemonType","stats","base_stat","weight","moves","length","SinglePokemon","isLoading","types","filter","slot","id","pokedex_SinglePokemonTable","BASE_URL","selected","value","SelectedTypePokemon","onChange","PokedexMain","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","limitPokemon","isLoadingSinglePokemon","bind","assertThisInitialized","getPokemonsFromServer","getSinglePokemonFromServer","handleChange","event","setState","target","_this2","fetch","then","response","json","results","_this3","pokemonId","nextProps","nextState","_this4","_this$state","_this$state2","pokedex_SelectedTypePokemon","pokedex_Pokemon","pokedex_SinglePokemon","React","Component","Pokedex","pokedex_PokedexHeader","pokedex_PokedexMain","App","pokedex_Pokedex","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed1129c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PokedexHeader = props => {\r\n  return (\r\n    <header className=\"pokedex-header\">\r\n      <h1 className=\"pokedex-header__title\">Pokedex</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PokedexHeader;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Pokemon = props => {\r\n  return (\r\n    <>\r\n      {props.isLoadingAllPokemons === true ? (\r\n        <ReactLoading\r\n          className=\"main-spiner\"\r\n          type=\"balls\"\r\n          color=\"#daed17\"\r\n          height={200}\r\n          width={200}\r\n          delay={300}\r\n        />\r\n      ) : (\r\n        <div className=\"pokedex-wrap\">\r\n          <div className=\"pokedex__pokemons\">\r\n            {props.pokemons.map(pokemon => (\r\n              <div\r\n                key={pokemon.name || pokemon.pokemon.name}\r\n                className=\"pokedex__pokemon\"\r\n                onClick={() =>\r\n                  props.singlePokemon(\r\n                    pokemon.url !== undefined\r\n                      ? pokemon.url.match(/pokemon\\/\\d+/g)\r\n                      : pokemon.pokemon.url.match(/pokemon\\/\\d+/g)\r\n                  )\r\n                }\r\n              >\r\n                {window.innerWidth < 500 ? (\r\n                  <a className=\"pokedex__scroll\" href=\"#pokedex-info\">\r\n                    <img\r\n                      src={`https://play.pokemonshowdown.com/sprites/xyani/${pokemon.name ||\r\n                        pokemon.pokemon.name}.gif`}\r\n                      alt={pokemon.name || pokemon.pokemon.name}\r\n                      className=\"pokedex__pokemons-image\"\r\n                    />\r\n                    <h3 className=\"pokedex__pokemons-name\">\r\n                      {pokemon.name || pokemon.pokemon.name}\r\n                    </h3>\r\n                  </a>\r\n                ) : (\r\n                  <>\r\n                    <img\r\n                      src={`https://play.pokemonshowdown.com/sprites/xyani/${pokemon.name ||\r\n                        pokemon.pokemon.name}.gif`}\r\n                      alt={pokemon.name || pokemon.pokemon.name}\r\n                      className=\"pokedex__pokemons-image\"\r\n                    />\r\n                    <h3 className=\"pokedex__pokemons-name\">\r\n                      {pokemon.name || pokemon.pokemon.name}\r\n                    </h3>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {+props.selectedPokemon === 0 ? (\r\n            <button className=\"pokedex__limit\" onClick={props.setLimit}>\r\n              Load More\r\n            </button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from 'react';\r\n\r\nconst SinglePokemonTable = ({ singlePokemon, pokemonType }) => {\r\n  return (\r\n    <table className=\"pokemon-table\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Type</td>\r\n          <td>{pokemonType[0].type.name}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Attack</td>\r\n          <td>{singlePokemon.stats[4].base_stat}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Defense</td>\r\n          <td>{singlePokemon.stats[3].base_stat}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>HP</td>\r\n          <td>{singlePokemon.stats[5].base_stat}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>SP Attack</td>\r\n          <td>{singlePokemon.stats[2].base_stat}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>SP Defense</td>\r\n          <td>{singlePokemon.stats[1].base_stat}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Speed</td>\r\n          <td>{singlePokemon.stats[0].base_stat}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Weight</td>\r\n          <td>{singlePokemon.weight}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Total moves</td>\r\n          <td>{singlePokemon.moves.length}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default SinglePokemonTable;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport SinglePokemonTable from './SinglePokemonTable';\r\n\r\nconst SinglePokemon = ({ isLoading, singlePokemon }) => {\r\n  let pokemonType = singlePokemon.types.filter(pokemon => pokemon.slot === 1);\r\n  return (\r\n    <div className=\"pokedex-info\" id=\"pokedex-info\">\r\n      {isLoading === true ? (\r\n        <ReactLoading\r\n          type=\"balls\"\r\n          color=\"#daed17\"\r\n          height={100}\r\n          width={200}\r\n          className=\"spiner\"\r\n          delay={300}\r\n        />\r\n      ) : (\r\n        <>\r\n          <img\r\n            src={`http://play.pokemonshowdown.com/sprites/xyani/${singlePokemon.name}.gif`}\r\n            alt={singlePokemon.name}\r\n            className=\"pokedex-info__image\"\r\n          />\r\n          <p className=\"pokedex-info__name\">{singlePokemon.name}</p>\r\n          <SinglePokemonTable pokemonType={pokemonType} singlePokemon={singlePokemon} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePokemon;\r\n","export const BASE_URL = 'https://pokeapi.co/api/v2/pokemon/';\r\n\r\nexport const BASE_URL_TYPE = 'https://pokeapi.co/api/v2/';\r\n\r\nexport const selected = [\r\n  {\r\n    value: '0',\r\n    name: 'all',\r\n  },\r\n  {\r\n    value: '1',\r\n    name: 'normal',\r\n  },\r\n  {\r\n    value: '2',\r\n    name: 'fighting',\r\n  },\r\n  {\r\n    value: '3',\r\n    name: 'flying',\r\n  },\r\n  {\r\n    value: '4',\r\n    name: 'poison',\r\n  },\r\n  {\r\n    value: '5',\r\n    name: 'ground',\r\n  },\r\n  {\r\n    value: '6',\r\n    name: 'rock',\r\n  },\r\n  {\r\n    value: '7',\r\n    name: 'bug',\r\n  },\r\n  {\r\n    value: '8',\r\n    name: 'ghost',\r\n  },\r\n  {\r\n    value: '9',\r\n    name: 'steel',\r\n  },\r\n  {\r\n    value: '10',\r\n    name: 'fire',\r\n  },\r\n  {\r\n    value: '11',\r\n    name: 'water',\r\n  },\r\n  {\r\n    value: '12',\r\n    name: 'grass',\r\n  },\r\n  {\r\n    value: '13',\r\n    name: 'electric',\r\n  },\r\n  {\r\n    value: '14',\r\n    name: 'psychic',\r\n  },\r\n  {\r\n    value: '15',\r\n    name: 'ice',\r\n  },\r\n  {\r\n    value: '16',\r\n    name: 'dragon',\r\n  },\r\n  {\r\n    value: '17',\r\n    name: 'dark',\r\n  },\r\n  {\r\n    value: '18',\r\n    name: 'fairy',\r\n  },\r\n  { value: '10001', name: 'hi' },\r\n];\r\n","import React from 'react';\r\n\r\nimport { selected } from '../../constants/constants';\r\n\r\nconst SelectedTypePokemon = ({ selectedPokemon, onChange }) => {\r\n  return (\r\n    <label className=\"label-type\">\r\n      Все покемоны это типа:\r\n      <select value={selectedPokemon} name=\"type\" className=\"main__selected\" onChange={onChange}>\r\n        {selected.map(pokemon => (\r\n          <option value={pokemon.value} key={pokemon.value}>\r\n            {pokemon.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default SelectedTypePokemon;\r\n","import React from 'react';\r\n\r\nimport Pokemon from './Pokemon';\r\nimport SinglePokemon from './SinglePokemon';\r\nimport SelectedTypePokemon from './SelectedTypePokemon';\r\nimport { BASE_URL, BASE_URL_TYPE } from '../../constants/constants';\r\n\r\nclass PokedexMain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      limitPokemon: 12,\r\n      pokemons: [],\r\n      singlePokemon: null,\r\n      selectedPokemon: 0,\r\n      isLoadingAllPokemons: false,\r\n      isLoadingSinglePokemon: false,\r\n    };\r\n\r\n    this.setLimit = this.setLimit.bind(this);\r\n    this.getPokemonsFromServer = this.getPokemonsFromServer.bind(this);\r\n    this.getSinglePokemonFromServer = this.getSinglePokemonFromServer.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ selectedPokemon: event.target.value });\r\n  }\r\n\r\n  getPokemonsFromServer() {\r\n    const { limitPokemon } = this.state;\r\n\r\n    this.setState({\r\n      isLoadingAllPokemons: true,\r\n    });\r\n\r\n    fetch(`${BASE_URL}?limit=${limitPokemon}`)\r\n      .then(response => response.json())\r\n      .then(pokemons => {\r\n        this.setState({\r\n          pokemons: pokemons.results,\r\n          isLoadingAllPokemons: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getSinglePokemonFromServer(id) {\r\n    let pokemonId = id[0].match(/\\d+/g)[0];\r\n\r\n    this.setState({\r\n      isLoadingSinglePokemon: true,\r\n    });\r\n\r\n    fetch(`${BASE_URL}${pokemonId}`)\r\n      .then(response => response.json())\r\n      .then(singlePokemon =>\r\n        this.setState({\r\n          singlePokemon,\r\n          isLoadingSinglePokemon: false,\r\n        })\r\n      );\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getPokemonsFromServer();\r\n  }\r\n\r\n  componentDidUpdate(nextProps, nextState) {\r\n    const { limitPokemon, selectedPokemon } = this.state;\r\n\r\n    if (\r\n      limitPokemon !== nextState.limitPokemon ||\r\n      (selectedPokemon !== nextState.selectedPokemon && +selectedPokemon === 0)\r\n    ) {\r\n      this.getPokemonsFromServer();\r\n    } else if (selectedPokemon !== nextState.selectedPokemon && +selectedPokemon !== 0) {\r\n      this.setState({\r\n        isLoadingAllPokemons: true,\r\n        singlePokemon: null,\r\n      });\r\n\r\n      fetch(`${BASE_URL_TYPE}type/${selectedPokemon}/`)\r\n        .then(response => response.json())\r\n        .then(pokemons =>\r\n          this.setState({\r\n            pokemons: pokemons.pokemon,\r\n            isLoadingAllPokemons: false,\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  setLimit() {\r\n    this.setState(state => {\r\n      return {\r\n        limitPokemon: state.limitPokemon + 12,\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      pokemons,\r\n      singlePokemon,\r\n      selectedPokemon,\r\n      isLoadingAllPokemons,\r\n      isLoadingSinglePokemon,\r\n    } = this.state;\r\n\r\n    return (\r\n      <main className=\"main\">\r\n        <SelectedTypePokemon selectedPokemon={selectedPokemon} onChange={this.handleChange} />\r\n        <div className=\"main__block\">\r\n          <Pokemon\r\n            singlePokemon={this.getSinglePokemonFromServer}\r\n            setLimit={this.setLimit}\r\n            pokemons={pokemons}\r\n            selectedPokemon={selectedPokemon}\r\n            isLoadingAllPokemons={isLoadingAllPokemons}\r\n          />\r\n          {singlePokemon === null ? (\r\n            <></>\r\n          ) : (\r\n            <SinglePokemon isLoading={isLoadingSinglePokemon} singlePokemon={singlePokemon} />\r\n          )}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokedexMain;\r\n","import React from 'react';\r\n\r\nimport PokedexHeader from './PokedexHeader';\r\nimport PokedexMain from './PokedexMain';\r\n\r\nconst Pokedex = () => {\r\n  return (\r\n    <div className=\"pokedex\">\r\n      <PokedexHeader />\r\n      <PokedexMain />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React from 'react';\nimport './App.css';\n\nimport Pokedex from './components/pokedex/Pokedex';\n\nfunction App() {\n  return (\n    <>\n      <Pokedex />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}